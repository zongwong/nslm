<style lang="scss">
.mdetail{
  overflow: hidden;
}
.mooddetail{
  background: #fff;
  overflow: hidden;
  .mood_item{
    border-color: #fff;
    margin-bottom: 0;
  }
  .data{
    height: 177rpx;
    position: relative;
    margin-bottom: 18rpx;
    image{
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1;;
    }
    .data_info{
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 2;
      padding: 28rpx 48rpx;
      box-sizing: border-box;
      display: flex;
      text-align: center;
      font-family: 'Pakt';
      .data_item{
        color: #fff;
        flex: 1;
        line-height: 1;
        &:first-child{
          border-right: 2rpx solid #fff;
        }
        .num{
          font-size: 90rpx;
        }
        .text{
          border: 2rpx solid #fff;
          border-radius: 40rpx;
          font-size:22rpx;
          display: inline-block;
          padding: 4rpx 12rpx;
        }

      }
    }
  }
}
.comment{
  margin-top: 18rpx;
  background: #fff;
  padding: 0 34rpx;
  margin-bottom: 180rpx;
  .title{
    font-size: 32rpx;
    font-weight: bold;
    line-height: 80rpx;
  }
  .comment_item{
    border-top: 2rpx solid #eee;
    padding: 20rpx 0;
    .userinfo{
      display: flex;
      &>image{
        width: 62rpx;
        height: 62rpx;
        border-radius: 50%;
        margin-right: 18rpx;
      }
      &>view{
        line-height: 62rpx;
        flex: 1;
        display: flex;
        justify-content: space-between;
        text{
          &:last-child{
            font-size: 24rpx;
          }
        }
      }
    }
    .comment_content{
      font-size: 26rpx;
      line-height: 34rpx;
      margin-top: 10rpx;
      padding-left: 80rpx;
    }
  }
}
.btns{
  width: 100%;
  position: fixed;
  bottom: 0;
  left: 0;
  height: 86rpx;
  border-top: 2rpx solid #f3f3f3;
  background: #fff;
  display: flex;
  view{
    flex: 1;
    text-align: center;
    line-height: 86rpx;
    font-size: 28rpx;
    color: #888;
    &:first-child{
      border-right: 2rpx solid #f3f3f3;
    }
  }
}
</style>
<template>
<view class="mdetail">
  <view class="mooddetail">
    <view class="mood_list">
      <view class="mood_item">
        <view class="mood_item_avatar">
          <image src="{{userInfo.avatarUrl}}"></image>
        </view>
        <view class="mood_item_detail">
          <view class="detail_user">
            <view class="name"><text>{{userInfo.nickName}}</text></view>
            <view class="time"><text class="greyColor">{{info.clock.c_time}}</text></view>
          </view>
          <view class="mood_item_text greyColor">{{info.clock.content}}</view>
          <view class="mood_item_imgs">
            <image src="{{item}}" wx:for="{{info.clock.img}}" wx:key="img_{{index}}" @tap="previewImg({{item}},{{info.clock.img}})"></image>
          </view>
          <view class="mood_item_btns">
            <view>
              <text class="icon icon_pl"></text>
              <text>{{info.clock.comment}}</text>
            </view>
            <view>
              <text class="icon icon_dz {{zan?'active':''}}"></text>
              <text>{{info.clock.zan}}</text>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="data">
      <image src="{{imgs.moodbg}}"></image>
      <view class="data_info">
        <view class="data_item">
          <view class="num">{{dayed}}</view>
          <view class="text">累计打卡</view>
        </view>
        <view class="data_item">
          <view class="num">{{days}}</view>
          <view class="text">任务天数</view>
        </view>
      </view>
    </view>
  </view>
  <view class="comment">
    <view class="title">评论</view>
    <view class="comment_box">
      <view class="comment_item" wx:for="{{info.comment}}" wx:key="comment_{{index}}">
        <view class="userinfo">
          <image src="{{item.u_avatarurl}}"></image>
          <view>
            <text>{{item.u_nickname}}</text>
            <text class="greyColor">{{item.c_time}}</text>
          </view>
        </view>
        <view class="comment_content">
            {{item.content}}
        </view>
      </view>
    </view>
  </view>
  <view class="btns">
    <view @tap="zan">
      <text class="icon icon_dz {{zan?'active':''}}"></text>
      <text>点赞</text>
    </view>
    <view @tap="toReply">
      <text class="icon icon_pl"></text>
      <text>评论</text>
    </view>
  </view>
</view>
</template>

<script>
  import wepy from 'wepy'
  import http from '../../utils/request'
  import api from '../../config'
  import interfaces from "../../interface/index"
  export default class Mooddetail extends wepy.page {
      config = {
        navigationBarTitleText: "打卡评论"
      };

      data = {
        query: null,
        info: null,
        zan: false,
        imgs: null,
        userInfo: null,
        days: 0,
        dayed: 0
      }
      methods = {
        async zan() {
          const { data } = await http({
            url: api.activity.zan.url,
            method: api.activity.zan.method,
            data: {
              cid: this.query.id
            }
          },true)

          if(data.code){
            this.zan = true
            this.info.clock.zan = parseInt(this.info.clock.zan) + 1
          }else{
            if (data.msg == '不能重复点赞'){
              this.zan = true
            }
          }
          this.$apply()
        },
        toReply() {
          wepy.navigateTo({
            url: `/pages/course/reply?type=comment&id=${this.query.id}`
          })
        },
        previewImg(cur,urls) {
          interfaces.previewImg(cur,urls)
        }
        
      }
      async onLoad(options) {
        this.query = options
        this.imgs = this.$parent.globalData.imgs
        this.userInfo = this.$parent.globalData.userInfo
        const { data } = await http({
          url: api.activity.signDetail.url,
          method: api.activity.signDetail.method,
          data: {
            cid: options.id
          }
        },true)

        if(data.code){
          this.info = data.info
          this.zan = Boolean(+data.info.clock.is_zan)
        }
        const activityData = await interfaces.getActivityInfo(options.aid)
        const getProgressData = await interfaces.getProgress(options.aid)
        this.days = activityData.info.days
        this.dayed = getProgressData.info?getProgressData.info.length:0
        this.$apply()
      }
  }
</script>
